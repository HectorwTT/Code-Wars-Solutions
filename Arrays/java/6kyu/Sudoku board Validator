import java.util.*;
public class SudokuValidator {
 public static boolean validate(int[][] board) {
  int[] values= new int[9];
  int column=0;
  int row=0;
  int index=0;
  long distinctcount=0;
  long numcount=0;
  while(row<9){
      values[column]=board[row][column++];
      if(column==9){
        row++;
        column=0;
        distinctcount = Arrays.stream(values).filter(num->num!=0)
                        .distinct().count();
        if(distinctcount!=9)return false;
        
      }    
    }
    row=0;
    column=0;
   while(column<9){
      values[row]=board[row++][column];
      if(row ==9){
           row=0;
           column++;
           distinctcount = Arrays.stream(values)
                           .filter(num->num!=0).distinct().count();
           if(distinctcount!=9)return false;
       }
   }
   for(int squarerow=0;squarerow<9;squarerow+=3){
     for(int squarecolumn=0;squarecolumn<9;squarecolumn+=3){
       for(int i=squarerow;i<squarerow+3;i++){
        for(int j=squarecolumn;j<squarecolumn+3;j++){
          values[index++]= board[i][j];
          }
       }
       index=0;
       distinctcount = Arrays.stream(values)
                           .filter(num->num!=0).distinct().count();
       if(distinctcount!=9)return false;
     }
   }
 return true;
}
}
